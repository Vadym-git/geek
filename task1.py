'''
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц вы найдете в методичке.
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно —
первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
'''

import random

a = [[random.randint(0, 4) for i in range(1, 11)] for k in range(1, 11)]
b = [[random.randint(0, 4) for i in range(1, 11)] for k in range(1, 11)]


class Matrix:

    def __init__(self,
                 some_list):  # я так понял, что перезагрузить инит это задать то как он работает, что и сдела ниже
        self._matrix = some_list  # если сделал не так, буду благодарен правильный пример.

    def __str__(self):  # на данный моммент это лучшее что я смог придумать, что реализовать то, что сказано в задании
        total = ''
        for i in self._matrix:
            total = total + str(i).replace('[', '').replace(']', '') + '\n'
        return total

    def __add__(self, other):
        '''
        Слаживать можно матрицы только с одинаковым размером, потому можно делать проверку в начале:
        так как нам приходить списко списков, мы посчитаем количество элементов в вложенных списках и сравним их.
        я буду рассчитывать, что нам приходят равные матрицы
        '''
        total_matrix = []
        for i in range(0, len(self._matrix)):
            # тут можно вставить проверку на количество элементов и кинуть исключение если они не равны в двух матрицах
            count_m1 = self._matrix[i]
            count_m2 = other._matrix[i]
            count_matrix = []
            for k in range(0, len(count_m1)):
                # также и тут можно уже проверить вложенную матрицу на количество элементов
                count_matrix.append(count_m1[k] + count_m2[k])
            total_matrix.append(count_matrix)
        return Matrix(total_matrix)


matrix1 = Matrix(a)
matrix2 = Matrix(b)
matrix3 = matrix1 + matrix2
print(matrix3)
